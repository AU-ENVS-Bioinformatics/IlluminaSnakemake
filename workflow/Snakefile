# Reading configuration file
configfile: "config/config.yaml"
DEFAULT_SOURCE_FILEPATH = config.get("DEFAULT_SOURCE_FILEPATH", "reads/")
DEFAULT_DEST_FILEPATH = config.get("DEFAULT_DEST_FILEPATH", "results/")
RENAMED_READS_FILEPATH = config.get("RENAMED_READS_FILEPATH", "renamed_raw_reads/")
TRIMMED_READS_FILEPATH = config.get("TRIMMED_READS_FILEPATH", "trimmed/")


# Searching for Illumina files
(name, sample, number, lane, read, segment,) = glob_wildcards(DEFAULT_SOURCE_FILEPATH+ "{name}-{sample}_{number}_{lane}_{read}_{segment}.fastq.gz")

rule all:
    input:
        expand(
            DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R1_val_1.fq.gz", sample = sample),
        expand(
            DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R2_val_2.fq.gz", sample = sample),
        expand(
            DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R1.fastq.gz_trimming_report.txt", sample = sample),
        expand(
            DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R2.fastq.gz_trimming_report.txt", sample = sample)

rule renaming_files:
    input:
        expand(
            DEFAULT_SOURCE_FILEPATH + "{name}-{sample}_{number}_{lane}_{read}_{segment}.fastq.gz",
            zip,
            name = name,sample = sample,
            number = number,lane = lane,
            read = read, segment = segment
            )
    output:
        expand(
            DEFAULT_DEST_FILEPATH + RENAMED_READS_FILEPATH + "{sample}_{read}.fastq.gz",
            zip,sample = sample,read  = read
            ),
    script:
        "scripts/renaming_files.py"

rule trim_galore_pe:
    input:
        [DEFAULT_DEST_FILEPATH + RENAMED_READS_FILEPATH + "{sample}_R1.fastq.gz", DEFAULT_DEST_FILEPATH + RENAMED_READS_FILEPATH + "{sample}_R2.fastq.gz"],
    output:
        DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R1_val_1.fq.gz",
        DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R1.fastq.gz_trimming_report.txt",
        DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R2_val_2.fq.gz",
        DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R2.fastq.gz_trimming_report.txt",
    params:
        extra=" ".join(config.get("trim_galore", "")),
    log:
        "logs/trim_galore/{sample}.log",
    wrapper:
        "v1.12.1/bio/trim_galore/pe"

# rule trimming_reads:
#     input:
#         R1 = DEFAULT_DEST_FILEPATH + RENAMED_READS_FILEPATH + "{sample}_R1.fastq.gz",
#         R2 = DEFAULT_DEST_FILEPATH + RENAMED_READS_FILEPATH + "{sample}_R2.fastq.gz",
#     output:
#         DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R1.1.fq.gz",
#         DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R2.2.fq.gz",
#         DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R1.fastq.gz_trimming_report.txt",
#         DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH + "{sample}_R2.fastq.gz_trimming_report.txt",
#     params:
#         extra=" ".join(config.get("trim_galore", "")),
#         outdir = DEFAULT_DEST_FILEPATH + TRIMMED_READS_FILEPATH,
#     log:
#         "logs/trim_galore/{sample}.log",
#     conda:
#         "envs/trim-galore.yaml"
#     shell:
#         "trim_galore --paired {params.extra}"
#         " -o {params.outdir}"
#         " {input.R1} {input.R2}"
#         " >> {log} 2>&1"